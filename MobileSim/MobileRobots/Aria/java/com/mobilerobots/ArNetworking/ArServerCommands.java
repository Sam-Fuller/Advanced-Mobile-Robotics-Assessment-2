/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.ArNetworking;
import com.mobilerobots.Aria.*;
public class ArServerCommands {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArServerCommands(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArServerCommands obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ArNetworkingJavaJNI.delete_ArServerCommands(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArServerCommands() {
    this(ArNetworkingJavaJNI.new_ArServerCommands(), true);
  }

  public final static class ServerCommands {
    public final static ServerCommands SHUTDOWN = new ServerCommands("SHUTDOWN", ArNetworkingJavaJNI.ArServerCommands_SHUTDOWN_get());
    public final static ServerCommands INTRODUCTION = new ServerCommands("INTRODUCTION", ArNetworkingJavaJNI.ArServerCommands_INTRODUCTION_get());
    public final static ServerCommands UDP_INTRODUCTION = new ServerCommands("UDP_INTRODUCTION", ArNetworkingJavaJNI.ArServerCommands_UDP_INTRODUCTION_get());
    public final static ServerCommands UDP_CONFIRMATION = new ServerCommands("UDP_CONFIRMATION", ArNetworkingJavaJNI.ArServerCommands_UDP_CONFIRMATION_get());
    public final static ServerCommands CONNECTED = new ServerCommands("CONNECTED", ArNetworkingJavaJNI.ArServerCommands_CONNECTED_get());
    public final static ServerCommands REJECTED = new ServerCommands("REJECTED", ArNetworkingJavaJNI.ArServerCommands_REJECTED_get());
    public final static ServerCommands TCP_ONLY = new ServerCommands("TCP_ONLY", ArNetworkingJavaJNI.ArServerCommands_TCP_ONLY_get());
    public final static ServerCommands LIST = new ServerCommands("LIST", ArNetworkingJavaJNI.ArServerCommands_LIST_get());
    public final static ServerCommands LISTSINGLE = new ServerCommands("LISTSINGLE", ArNetworkingJavaJNI.ArServerCommands_LISTSINGLE_get());
    public final static ServerCommands LISTARGRET = new ServerCommands("LISTARGRET", ArNetworkingJavaJNI.ArServerCommands_LISTARGRET_get());
    public final static ServerCommands LISTARGRETSINGLE = new ServerCommands("LISTARGRETSINGLE", ArNetworkingJavaJNI.ArServerCommands_LISTARGRETSINGLE_get());
    public final static ServerCommands LISTGROUPANDFLAGS = new ServerCommands("LISTGROUPANDFLAGS", ArNetworkingJavaJNI.ArServerCommands_LISTGROUPANDFLAGS_get());
    public final static ServerCommands LISTGROUPANDFLAGSSINGLE = new ServerCommands("LISTGROUPANDFLAGSSINGLE", ArNetworkingJavaJNI.ArServerCommands_LISTGROUPANDFLAGSSINGLE_get());

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static ServerCommands swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + ServerCommands.class + " with value " + swigValue);
    }

    private ServerCommands(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private ServerCommands(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private ServerCommands(String swigName, ServerCommands swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static ServerCommands[] swigValues = { SHUTDOWN, INTRODUCTION, UDP_INTRODUCTION, UDP_CONFIRMATION, CONNECTED, REJECTED, TCP_ONLY, LIST, LISTSINGLE, LISTARGRET, LISTARGRETSINGLE, LISTGROUPANDFLAGS, LISTGROUPANDFLAGSSINGLE };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
