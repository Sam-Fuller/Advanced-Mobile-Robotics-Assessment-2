/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.ArNetworking;
import com.mobilerobots.Aria.*;
public class ArClientFileLister {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArClientFileLister(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArClientFileLister obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ArNetworkingJavaJNI.delete_ArClientFileLister(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArClientFileLister(ArClientBase client) {
    this(ArNetworkingJavaJNI.new_ArClientFileLister(ArClientBase.getCPtr(client), client), true);
  }

  public boolean isAvailable() {
    return ArNetworkingJavaJNI.ArClientFileLister_isAvailable(swigCPtr, this);
  }

  public void changeToTopDir() {
    ArNetworkingJavaJNI.ArClientFileLister_changeToTopDir(swigCPtr, this);
  }

  public void changeToDir(String dir) {
    ArNetworkingJavaJNI.ArClientFileLister_changeToDir(swigCPtr, this, dir);
  }

  public void upOneDir() {
    ArNetworkingJavaJNI.ArClientFileLister_upOneDir(swigCPtr, this);
  }

  public void changeToAbsDir(String dir) {
    ArNetworkingJavaJNI.ArClientFileLister_changeToAbsDir(swigCPtr, this, dir);
  }

  public String getCurrentDir() {
    return ArNetworkingJavaJNI.ArClientFileLister_getCurrentDir(swigCPtr, this);
  }

  public String getWaitingForDir() {
    return ArNetworkingJavaJNI.ArClientFileLister_getWaitingForDir(swigCPtr, this);
  }

  public SWIGTYPE_p_std__listT_ArClientFileListerItem_t getDirectories() {
    return new SWIGTYPE_p_std__listT_ArClientFileListerItem_t(ArNetworkingJavaJNI.ArClientFileLister_getDirectories(swigCPtr, this), true);
  }

  public SWIGTYPE_p_std__listT_ArClientFileListerItem_t getFiles() {
    return new SWIGTYPE_p_std__listT_ArClientFileListerItem_t(ArNetworkingJavaJNI.ArClientFileLister_getFiles(swigCPtr, this), true);
  }

  public void addUpdatedCallback(ArFunctor1_Int functor, ArListPos.Pos position) {
    ArNetworkingJavaJNI.ArClientFileLister_addUpdatedCallback__SWIG_0(swigCPtr, this, ArFunctor1_Int.getCPtr(functor), functor, position.swigValue());
  }

  public void addUpdatedCallback(ArFunctor1_Int functor) {
    ArNetworkingJavaJNI.ArClientFileLister_addUpdatedCallback__SWIG_1(swigCPtr, this, ArFunctor1_Int.getCPtr(functor), functor);
  }

  public void remUpdatedCallback(ArFunctor1_Int functor) {
    ArNetworkingJavaJNI.ArClientFileLister_remUpdatedCallback(swigCPtr, this, ArFunctor1_Int.getCPtr(functor), functor);
  }

  public ArTime getLastUpdated() {
    return new ArTime(ArNetworkingJavaJNI.ArClientFileLister_getLastUpdated(swigCPtr, this), true);
  }

  public ArTime getLastRequested() {
    return new ArTime(ArNetworkingJavaJNI.ArClientFileLister_getLastRequested(swigCPtr, this), true);
  }

  public void log(boolean withTimes) {
    ArNetworkingJavaJNI.ArClientFileLister_log(swigCPtr, this, withTimes);
  }

}
