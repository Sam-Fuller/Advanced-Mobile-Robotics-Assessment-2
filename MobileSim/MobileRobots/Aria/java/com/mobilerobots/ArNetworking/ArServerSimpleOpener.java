/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.ArNetworking;
import com.mobilerobots.Aria.*;
public class ArServerSimpleOpener {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArServerSimpleOpener(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArServerSimpleOpener obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ArNetworkingJavaJNI.delete_ArServerSimpleOpener(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArServerSimpleOpener(ArArgumentParser parser, String prefix) {
    this(ArNetworkingJavaJNI.new_ArServerSimpleOpener__SWIG_0(ArArgumentParser.getCPtr(parser), parser, prefix), true);
  }

  public ArServerSimpleOpener(ArArgumentParser parser) {
    this(ArNetworkingJavaJNI.new_ArServerSimpleOpener__SWIG_1(ArArgumentParser.getCPtr(parser), parser), true);
  }

  public boolean open(ArServerBase server, String baseDirectory, int secondsToTryFor) {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_open__SWIG_0(swigCPtr, this, ArServerBase.getCPtr(server), server, baseDirectory, secondsToTryFor);
  }

  public boolean open(ArServerBase server, String baseDirectory) {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_open__SWIG_1(swigCPtr, this, ArServerBase.getCPtr(server), server, baseDirectory);
  }

  public boolean open(ArServerBase server) {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_open__SWIG_2(swigCPtr, this, ArServerBase.getCPtr(server), server);
  }

  public boolean parseArgs() {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_parseArgs__SWIG_0(swigCPtr, this);
  }

  public boolean parseArgs(ArArgumentParser parser) {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_parseArgs__SWIG_1(swigCPtr, this, ArArgumentParser.getCPtr(parser), parser);
  }

  public void logOptions() {
    ArNetworkingJavaJNI.ArServerSimpleOpener_logOptions(swigCPtr, this);
  }

  public boolean checkAndLog() {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_checkAndLog(swigCPtr, this);
  }

  public boolean wasUserFileBad() {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_wasUserFileBad(swigCPtr, this);
  }

  public boolean didOpenFail() {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_didOpenFail(swigCPtr, this);
  }

  public int getPort() {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_getPort(swigCPtr, this);
  }

  public boolean parseFile(String fileName) {
    return ArNetworkingJavaJNI.ArServerSimpleOpener_parseFile(swigCPtr, this, fileName);
  }

  public void setServerTcpOnly(boolean serverTcpOnly) {
    ArNetworkingJavaJNI.ArServerSimpleOpener_setServerTcpOnly(swigCPtr, this, serverTcpOnly);
  }

}
