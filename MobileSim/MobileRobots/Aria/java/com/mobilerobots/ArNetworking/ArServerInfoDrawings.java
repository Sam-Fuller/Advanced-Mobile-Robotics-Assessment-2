/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.ArNetworking;
import com.mobilerobots.Aria.*;
public class ArServerInfoDrawings {
  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArServerInfoDrawings(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArServerInfoDrawings obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ArNetworkingJavaJNI.delete_ArServerInfoDrawings(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ArServerInfoDrawings(ArServerBase server) {
    this(ArNetworkingJavaJNI.new_ArServerInfoDrawings(ArServerBase.getCPtr(server), server), true);
  }

  public boolean addDrawing(ArDrawingData drawingData, String name, ArFunctor_ServerData functor) {
    return ArNetworkingJavaJNI.ArServerInfoDrawings_addDrawing(swigCPtr, this, ArDrawingData.getCPtr(drawingData), drawingData, name, ArFunctor_ServerData.getCPtr(functor), functor);
  }

  public boolean addRangeDevice(ArRangeDevice rangeDevice) {
    return ArNetworkingJavaJNI.ArServerInfoDrawings_addRangeDevice(swigCPtr, this, ArRangeDevice.getCPtr(rangeDevice), rangeDevice);
  }

  public boolean addRobotsRangeDevices(ArRobot robot) {
    return ArNetworkingJavaJNI.ArServerInfoDrawings_addRobotsRangeDevices(swigCPtr, this, ArRobot.getCPtr(robot), robot);
  }

  public void netListDrawings(ArServerClient client, ArNetPacket packet) {
    ArNetworkingJavaJNI.ArServerInfoDrawings_netListDrawings(swigCPtr, this, ArServerClient.getCPtr(client), client, ArNetPacket.getCPtr(packet), packet);
  }

  public void netGetDrawingList(ArServerClient client, ArNetPacket packet) {
    ArNetworkingJavaJNI.ArServerInfoDrawings_netGetDrawingList(swigCPtr, this, ArServerClient.getCPtr(client), client, ArNetPacket.getCPtr(packet), packet);
  }

  public void netRangeDeviceCurrent(ArServerClient client, ArNetPacket packet, ArRangeDevice device) {
    ArNetworkingJavaJNI.ArServerInfoDrawings_netRangeDeviceCurrent(swigCPtr, this, ArServerClient.getCPtr(client), client, ArNetPacket.getCPtr(packet), packet, ArRangeDevice.getCPtr(device), device);
  }

  public void netRangeDeviceCumulative(ArServerClient client, ArNetPacket packet, ArRangeDevice device) {
    ArNetworkingJavaJNI.ArServerInfoDrawings_netRangeDeviceCumulative(swigCPtr, this, ArServerClient.getCPtr(client), client, ArNetPacket.getCPtr(packet), packet, ArRangeDevice.getCPtr(device), device);
  }

}
