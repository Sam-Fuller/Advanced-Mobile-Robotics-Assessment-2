/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.ArNetworking;
import com.mobilerobots.Aria.*;
public class ArHybridForwarderVideo extends ArCameraCollectionItem {
  private long swigCPtr;

  /* for internal use by swig only */
  public ArHybridForwarderVideo(long cPtr, boolean cMemoryOwn) {
    super(ArNetworkingJavaJNI.SWIGArHybridForwarderVideoUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArHybridForwarderVideo obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        ArNetworkingJavaJNI.delete_ArHybridForwarderVideo(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  public ArHybridForwarderVideo(ArServerBase server, ArClientBase client) {
    this(ArNetworkingJavaJNI.new_ArHybridForwarderVideo__SWIG_0(ArServerBase.getCPtr(server), server, ArClientBase.getCPtr(client), client), true);
  }

  public ArHybridForwarderVideo(ArServerBase server, String hostname, int port) {
    this(ArNetworkingJavaJNI.new_ArHybridForwarderVideo__SWIG_1(ArServerBase.getCPtr(server), server, hostname, port), true);
  }

  public ArHybridForwarderVideo(ArServerBase server, String hostname) {
    this(ArNetworkingJavaJNI.new_ArHybridForwarderVideo__SWIG_2(ArServerBase.getCPtr(server), server, hostname), true);
  }

  public ArHybridForwarderVideo(ArServerBase server) {
    this(ArNetworkingJavaJNI.new_ArHybridForwarderVideo__SWIG_3(ArServerBase.getCPtr(server), server), true);
  }

  public boolean isForwardingVideo() {
    return ArNetworkingJavaJNI.ArHybridForwarderVideo_isForwardingVideo(swigCPtr, this);
  }

  public String getCameraName() {
    return ArNetworkingJavaJNI.ArHybridForwarderVideo_getCameraName(swigCPtr, this);
  }

  public void setCameraName(String cameraName) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_setCameraName(swigCPtr, this, cameraName);
  }

  public void addToCameraCollection(ArCameraCollection collection) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_addToCameraCollection(swigCPtr, this, ArCameraCollection.getCPtr(collection), collection);
  }

  public void sendVideoSize(ArServerClient client, ArNetPacket packet) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_sendVideoSize(swigCPtr, this, ArServerClient.getCPtr(client), client, ArNetPacket.getCPtr(packet), packet);
  }

  public void sendVideo(ArServerClient client, ArNetPacket packet) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_sendVideo(swigCPtr, this, ArServerClient.getCPtr(client), client, ArNetPacket.getCPtr(packet), packet);
  }

  public void receiveVideoSize(ArNetPacket packet) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_receiveVideoSize(swigCPtr, this, ArNetPacket.getCPtr(packet), packet);
  }

  public void receiveVideo(ArNetPacket packet) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_receiveVideo(swigCPtr, this, ArNetPacket.getCPtr(packet), packet);
  }

  public void clientCycleCallback() {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_clientCycleCallback(swigCPtr, this);
  }

  public void setVideoRequestTime(int ms) {
    ArNetworkingJavaJNI.ArHybridForwarderVideo_setVideoRequestTime__SWIG_0(swigCPtr, this, ms);
  }

  public int setVideoRequestTime() {
    return ArNetworkingJavaJNI.ArHybridForwarderVideo_setVideoRequestTime__SWIG_1(swigCPtr, this);
  }

}
