/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.40
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.mobilerobots.Aria;

public class ArModuleLoader {
  /* (begin code from javabody typemap) */

  private long swigCPtr;
  protected boolean swigCMemOwn;

  /* for internal use by swig only */
  public ArModuleLoader(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  /* for internal use by swig only */
  public static long getCPtr(ArModuleLoader obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  /* (end code from javabody typemap) */

  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        AriaJavaJNI.delete_ArModuleLoader(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public static ArModuleLoader.Status load(String modName, ArRobot robot, SWIGTYPE_p_void modArgument, boolean quiet) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_load__SWIG_0(modName, ArRobot.getCPtr(robot), robot, SWIGTYPE_p_void.getCPtr(modArgument), quiet));
  }

  public static ArModuleLoader.Status load(String modName, ArRobot robot, SWIGTYPE_p_void modArgument) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_load__SWIG_1(modName, ArRobot.getCPtr(robot), robot, SWIGTYPE_p_void.getCPtr(modArgument)));
  }

  public static ArModuleLoader.Status load(String modName, ArRobot robot) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_load__SWIG_2(modName, ArRobot.getCPtr(robot), robot));
  }

  public static ArModuleLoader.Status reload(String modName, ArRobot robot, SWIGTYPE_p_void modArgument, boolean quiet) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_reload__SWIG_0(modName, ArRobot.getCPtr(robot), robot, SWIGTYPE_p_void.getCPtr(modArgument), quiet));
  }

  public static ArModuleLoader.Status reload(String modName, ArRobot robot, SWIGTYPE_p_void modArgument) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_reload__SWIG_1(modName, ArRobot.getCPtr(robot), robot, SWIGTYPE_p_void.getCPtr(modArgument)));
  }

  public static ArModuleLoader.Status reload(String modName, ArRobot robot) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_reload__SWIG_2(modName, ArRobot.getCPtr(robot), robot));
  }

  public static ArModuleLoader.Status close(String modName, boolean quiet) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_close__SWIG_0(modName, quiet));
  }

  public static ArModuleLoader.Status close(String modName) {
    return ArModuleLoader.Status.swigToEnum(AriaJavaJNI.ArModuleLoader_close__SWIG_1(modName));
  }

  public static void closeAll() {
    AriaJavaJNI.ArModuleLoader_closeAll();
  }

  public ArModuleLoader() {
    this(AriaJavaJNI.new_ArModuleLoader(), true);
  }

  public final static class Status {
    public final static Status STATUS_SUCCESS = new Status("STATUS_SUCCESS", AriaJavaJNI.ArModuleLoader_STATUS_SUCCESS_get());
    public final static Status STATUS_ALREADY_LOADED = new Status("STATUS_ALREADY_LOADED");
    public final static Status STATUS_FAILED_OPEN = new Status("STATUS_FAILED_OPEN");
    public final static Status STATUS_INVALID = new Status("STATUS_INVALID");
    public final static Status STATUS_INIT_FAILED = new Status("STATUS_INIT_FAILED");
    public final static Status STATUS_EXIT_FAILED = new Status("STATUS_EXIT_FAILED");
    public final static Status STATUS_NOT_FOUND = new Status("STATUS_NOT_FOUND");

    public final int swigValue() {
      return swigValue;
    }

    public String toString() {
      return swigName;
    }

    public static Status swigToEnum(int swigValue) {
      if (swigValue < swigValues.length && swigValue >= 0 && swigValues[swigValue].swigValue == swigValue)
        return swigValues[swigValue];
      for (int i = 0; i < swigValues.length; i++)
        if (swigValues[i].swigValue == swigValue)
          return swigValues[i];
      throw new IllegalArgumentException("No enum " + Status.class + " with value " + swigValue);
    }

    private Status(String swigName) {
      this.swigName = swigName;
      this.swigValue = swigNext++;
    }

    private Status(String swigName, int swigValue) {
      this.swigName = swigName;
      this.swigValue = swigValue;
      swigNext = swigValue+1;
    }

    private Status(String swigName, Status swigEnum) {
      this.swigName = swigName;
      this.swigValue = swigEnum.swigValue;
      swigNext = this.swigValue+1;
    }

    private static Status[] swigValues = { STATUS_SUCCESS, STATUS_ALREADY_LOADED, STATUS_FAILED_OPEN, STATUS_INVALID, STATUS_INIT_FAILED, STATUS_EXIT_FAILED, STATUS_NOT_FOUND };
    private static int swigNext = 0;
    private final int swigValue;
    private final String swigName;
  }

}
